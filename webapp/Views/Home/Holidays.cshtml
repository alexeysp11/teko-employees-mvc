@model IEnumerable<Holiday>
@{
    ViewData["Title"] = "Holidays Page";
    var jobTitles = System.Enum.GetValues(typeof(TekoEmployeesMvc.Models.JobTitle)); 
    var departments = System.Enum.GetValues(typeof(TekoEmployeesMvc.Models.Department)); 
}

<div class="text-center">
    <h1 class="display-4">Holidays</h1>
    <label>Filter</label>
    <form method="post" asp-controller="Home" asp-action="FilterHolidays" role="post"> 
        <label>FIO: </label>
        <input type="text" placeholder="Enter FIO" name="fio">
        <label>Age: </label>
        <input type="text" placeholder="Enter age (from)" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"  name="ageFrom">
        <label>-</label>
        <input type="text" placeholder="Enter age (to)" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"  name="ageTo">
        <label>Gender: </label>
        <select name="gender">
            <option></option>
            <option>Male</option>
            <option>Female</option>
        </select>
        <label>Job title: </label>
        <select name="jobTitle">
            <option></option>
            @foreach (var obj in jobTitles) 
            {
                <option>@obj</option>
            }
        </select>
        <label>Department: </label>
        <select name="department">
            <option></option>
            @foreach (var obj in departments) 
            {
                <option>@obj</option>
            }
        </select>
        <br>

        <label>Current user</label>
        <br>
        <label>FIO: </label>
        <input type="text" placeholder="Enter FIO" name="currentFio">
        <label>Age: </label>
        <input type="text" placeholder="Enter age (from)" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"  name="currentAgeFrom">
        <label>-</label>
        <input type="text" placeholder="Enter age (to)" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1');"  name="currentAgeTo">
        <label>Gender: </label>
        <select name="currentGender">
            <option></option>
            <option>Male</option>
            <option>Female</option>
        </select>
        <label>Job title: </label>
        <select name="currentJobTitle">
            <option></option>
            @foreach (var obj in jobTitles) 
            {
                <option>@obj</option>
            }
        </select>
        <label>Department: </label>
        <select name="currentDepartment">
            <option></option>
            @foreach (var obj in departments) 
            {
                <option>@obj</option>
            }
        </select>
        <br>
        
        <label>Filter options: </label>
        <select name="filterOptions">
            <option>Find all</option>
            <option>Show intersections</option>
            <option>Exclude intersections</option>
        </select>
        <input type="submit" value="Find" class="btn btn-primary" />
    </form>
</div>

<label><b>Filters:</b> @TempData["filterInfoHolidays"]</label>
<br>
<label><b>Current user:</b> @TempData["userInfoHolidays"]</label>
<br>
<label><b>Filter options:</b> @TempData["filterOptionsHolidays"]</label>

@if (Model == null)
{
    <label>Users are not generated yet...</label>
}
else
{
    <table class="table table-bordered table-striped" style="width: 100%">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Gender
                </th>
                <th>
                    Job title
                </th>
                <th>
                    Department
                </th>
                <th>
                    Age
                </th>
                <th>
                    Begin date
                </th>
                <th>
                    End date
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Model)
            {
                var age = System.DateTime.Now.Year - obj.User.BirthDate.Year;
                if (obj.User.BirthDate.Month > System.DateTime.Now.Month && obj.User.BirthDate.Day > System.DateTime.Now.Day)
                    age -= 1; 
                <tr>
                    <td>
                        @obj.User.FIO
                    </td>
                    <td>
                        @obj.User.Gender
                    </td>
                    <td>
                        @obj.User.JobTitle
                    </td>
                    <td>
                        @obj.User.Department
                    </td>
                    <td>
                        @age
                    </td>
                    <td>
                        @obj.BeginDate.ToString("dd.MM.yyyy")
                    </td>
                    <td>
                        @obj.EndDate.ToString("dd.MM.yyyy")
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
